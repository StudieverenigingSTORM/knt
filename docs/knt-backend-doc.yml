openapi: '3.0.2'
info:
  title: KnT Backend
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000/
paths:
  /ping:
    get:
      description: "Basic ping function accessable without any keys"
      tags:
        - "Misc"
      responses:
        '200':
          description: OK
  /users:
    get:
      tags:
        - "User Basic"
      security:
        - ApiKeyAuth: []
      description: 'Get information about all registered users accessible with a user api key'
      parameters: []
      responses:
        '200':
          description: A list of user objects with removed sensitive information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
                  
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
  /users/products:
    get:
      tags:
        - "Product Basic"
      description: 'Retrieve a list of products from the database'
      parameters: []
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A list of product objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/product"
                  
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
  /admin/products:
    put:
      tags:
        - "Product Admin"
      description: 'Edit product'
      security:
        - ApiKeyAuth: []
        - AdminId: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 4
                  description: id of the product
                name: 
                  type: string
                  example: "Beer"
                  description: Name of the product
                taxcategory:
                  type: integer
                  example: 1
                  description: id of the tax category of the product
                visibility:
                  type: integer
                  example: 1
                  description: is the product visable to the knt frontend
      responses:
        '204':
          description: updated
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
    get:
      tags:
        - "Product Admin"
      description: 'Retrieve full data on all products'
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A list of product objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/fullproduct"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
    post:
      tags:
        - "Product Admin"
      description: 'Create a new product in the database'
      security:
        - ApiKeyAuth: []
        - AdminId: []
      requestBody:
        description: 'Basic product to create'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: integer
                  example: 80
                  description: price in cents
                name:
                  type: string
                  example: Beer
                visibility: 
                  type: integer
                  example: 1
                taxcategory:
                  type: integer
                  example: 1
      responses:
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: id of the created product
                    example: 69
                    type: integer
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /admin/products/{productId}:
    get:
      tags:
        - "Product Admin"
      description: 'Retrieve full data on all products'
      security:
        - ApiKeyAuth: []
      parameters: 
        - in: path
          required: true
          name: productId
          schema:
            type: integer
      responses:
        '200':
          description: A list of product objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/fullproduct"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /users/{userId}/purchase:
    post:
      tags:
        - "User Basic"
      description: 'Send a list of purchased products'
      security:
        - ApiKeyAuth: []
      parameters: 
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to target
      requestBody:
        description: 'List of products the user has bought'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: user pin
                  example: "1234"
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        description: id of the product
                        example: 1
                      amount:
                        type: integer
                        description: amount of the product
                        example: 1
      responses:
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  moneySpent:
                    example: 80
                    type: integer
                    description: Money that has been deducted
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /users/{userId}:
    get:
      tags:
        - "User Basic"
      description: 'Get data of a specific user'
      parameters: 
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to target
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '404':
          $ref: "#/components/responses/NotFoundError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /admin/users/{userId}:
    get:
      tags:
        - "User Admin"
      security:
        - ApiKeyAuth: []
      description: 'Get complete information about a registered user with a specific id'
      parameters: 
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to target
      responses:
        '200':
          description: A object of full user prividing complete user data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
                  
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '404':
          $ref: "#/components/responses/NotFoundError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /admin/users/balance:
    post:
      tags:
        - "User Admin"
      description: 'Increment balance of the account based on the vunet id'
      security:
        - ApiKeyAuth: []
        - AdminId: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                balance:
                  example: 80 
                  type: integer
                  description: Amount in cents
                vunetId:
                  example: pps999
                  type: string
                  description: vunetID
                reference:
                  example: UwU~
                  type: string
                  description: reference given through the storm web shop
      responses:
        '204':
          description: OK
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /admin/users:
    get:
      tags:
        - "User Admin"
      description: 'Get complete list of data on all of the users'
      parameters: []
      security: 
        - ApiKeyAuth: []
     
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/fulluser"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
    put:
      tags:
        - "User Admin"
      description: 'Edit userdata, balance is not able to be updated. Empty string values will be ignored'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The user ID.
                  example: 1
                firstName:
                  type: string
                  description: The users first name.
                  example: Person
                lastName:
                  type: string
                  description: The users last name.
                  example: Personson
                vunetId:
                  type: string
                  description: vunetId
                  example: pps999
                password:
                  type: string
                  description: new password (will be hashed in the Backend) (leave empty if not changed)
                  example: "12345678"
                visibility:
                  type: integer
                  description: Visibility status of the user 0 will make the user invisable to the knt front end
                  example: 1
      parameters: []
      security:
        - ApiKeyAuth: []
        - AdminId: []
      responses:
        '204':
          description: No content
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
    post:
      tags:
        - "User Admin"
      description: 'Create new user'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: The users first name.
                  example: Person
                lastName:
                  type: string
                  description: The users last name.
                  example: Personson
                vunetId:
                  type: string
                  description: vunetId
                  example: pps999
                password:
                  type: string
                  description: new password (will be hashed in the Backend) (leave empty if not changed)
                  example: "12345678"
                visibility:
                  type: integer
                  description: Visibility status of the user 0 will make the user invisable to the knt front end
                  example: 1
      security:
        - ApiKeyAuth: []
        - AdminId: []
      responses:
        '200':
          description: OK
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /admin/tax:
    get:
      tags:
        - "Tax Admin"
      description: 'Return a complete list of tax categories'
      parameters: []
      security: 
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/taxcategory"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
    post:
      tags:
        - "Tax Admin"
      description: 'Create a new tax category'
      parameters: []
      security: 
        - ApiKeyAuth: []
        - AdminId: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name of the category
                  example: alcohol
                percentage:
                  type: integer
                  description: amount in percentages that the product is taxed
                  example: 21
      responses:
        '201':
          description: "Created"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
    put:
      tags:
        - "Tax Admin"
      description: 'Update a tax category'
      parameters: []
      security: 
        - ApiKeyAuth: []
        - AdminId: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/taxcategory"
      responses:
        '200':
          description: "OK"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
  /admin/transactions:
    get:
      tags:
        - "Transactions Admin"
      description: 'Return a complete list of transactions with paginations'
      parameters: 
        - in: query
          name: perPage
          schema:
            type: integer
          required: false
          description: Amount of items per page
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number starting at index 0  
      security: 
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: user id
                      example: 1
                    vunetid:
                      type: string
                      example: skn999
                    starting_balance:
                      type: integer
                      example: 1000
                    delta_balance:
                      type: integer
                      example: -20
                    final_balance:
                      type: integer
                      example: 980
                    reference:
                      type: string
                      example: Uwu~
                    timestamp:
                      type: string
                      example: "2023-04-17 21:15:56"
                    data:
                      type: string
                      description: data of the receipt
                      example: '[{"productId":1,"amount":1}]'
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '407':
          $ref: "#/components/responses/ForbidenError"
        '422':
          $ref: "#/components/responses/UnprocessableError"
components:
  schemas:
    taxcategory:
      type: object
      properties:
        id:
          type: integer
          description: The category ID.
          example: 1
        name:
          type: string
          description: name of the category
          example: alcohol
        percentage:
          type: integer
          description: amount in percentages that the product is taxed
          example: 21
    user:
      type: object
      properties:
        id:
          type: integer
          description: The user ID.
          example: 1
        taxcategory:
          type: integer
          description: The category id of the product.
          example: 1
        firstName:
          type: string
          description: The users first name.
          example: Person
        lastName:
          type: string
          description: The users last name.
          example: Personson
        balance:
          type: integer
          description: The users balance amount in cents
          example: 8154
    fulluser:
      type: object
      properties:
        id:
          type: integer
          description: The user ID.
          example: 1
        firstName:
          type: string
          description: The users first name.
          example: Person
        lastName:
          type: string
          description: The users last name.
          example: Personson
        vunetId:
          type: string
          description: vunetId
          example: pps999
        password:
          type: string
          description: new password (will be hashed in the Backend) (leave empty if not changed)
          example: "12345678"
        balance:
          type: integer
          description: The users balance amount in cents
          example: 154840
        visibility:
          type: integer
          description: Visibility status of the user 0 will make the user invisable to the knt front end
          example: 1
    product:
      type: object
      properties:
        id:
          type: integer
          description: The products ID.
          example: 1
        price:
          type: integer
          description: The products price in cents
          example: 80
        name:
          type: string
          description: The products name
          example: Beer
    fullproduct:
      type: object
      properties:
        id:
          type: integer
          description: The products ID.
          example: 1
        price:
          type: integer
          description: The products price in cents
          example: 80
        name:
          type: string
          description: The products name
          example: Beer
        visibility:
          type: integer
          description: Visibility status of the product will make the product invisable to the knt front end
          example: 1
        taxcategory:
          type: integer
          description: tax category of the product
          example: 1
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: Api key for the knt (test defined in backend root)
    AdminId:
      type: apiKey
      in: header
      name: X-Admin-Id
      description: Admin identifier assigned to the user
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
    NotFoundError:
      description: Resource does not exist
    ForbidenError:
      description: Api key does not have the necessary permissions to carry out this request
    UnprocessableError:
      description: Malformed user input